{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Metadata": {
    "CloudCanvas": {
      "Description": "Project Admin and Owner roles, will be appended to main stack if admin-roles option is true",
      "Id": "$Revision: #7 $"
    }
  },

  "Parameters": {},

  "Resources": {
    "ProjectOwner": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": {
          "Fn::Join": ["", ["/", {"Ref": "AWS::StackName"}, "/"]]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AccountUserAssumeRole",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "AWS": {
                  "Ref": "AWS::AccountId"
                }
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Ref": "ProjectAccess"
          },
          {
            "Ref": "ProjectOwnerAccess"
          }
        ]
      },
      "Metadata": {
        "CloudCanvas": {
          "RoleMappings": [
            {
              "AbstractRole": [
                "*.ProjectAdmin",
                "*.ProjectOwner"
              ],
              "Effect": "Allow"
            }
          ]
        }
      }
    },

    "ProjectOwnerAccess": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Path": {
          "Fn::Join": ["", ["/", {"Ref": "AWS::StackName"}, "/"]]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "CreateAndManageProjectAndDeploymentRoles",
              "Effect": "Allow",
              "Action": [
                "iam:AttachRolePolicy",
                "iam:DetachRolePolicy",
                "iam:CreatePolicy",
                "iam:CreatePolicyVersion",
                "iam:CreateRole",
                "iam:DeletePolicy",
                "iam:DeletePolicyVersion",
                "iam:DeleteRole",
                "iam:DeleteRolePolicy",
                "iam:GetPolicy",
                "iam:GetRole",
                "iam:GetRolePolicy",
                "iam:ListPolicyVersions",
                "iam:ListRolePolicies",
                "iam:PassRole",
                "iam:PutRolePolicy",
                "iam:UpdateAssumeRolePolicy"
              ],
              "Resource": [
                {"Fn::Join": ["", ["arn:aws:iam::", {"Ref": "AWS::AccountId"}, ":role/", {"Ref": "AWS::StackName"}, "/*"]]},
                {"Fn::Join": ["", ["arn:aws:iam::", {"Ref": "AWS::AccountId"}, ":policy/", {"Ref": "AWS::StackName"}, "/*"]]}
              ]
            },
            {
              "Sid": "CreateLambdaFunctions",
              "Effect": "Allow",
              "Action": "lambda:CreateFunction",
              "Resource": "*"
            },
            {
              "Sid": "CreateUpdateAndDeleteDeploymentAndResourceGroupStacks",
              "Effect": "Allow",
              "Action": [
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:GetTemplate",
                "cloudformation:CreateStack",
                "cloudformation:UpdateStack",
                "cloudformation:DeleteStack"
              ],
              "Resource": [
                {"Fn::Join": ["", ["arn:aws:cloudformation:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":stack/", {"Ref": "AWS::StackName"}, "-*"]]}
              ]
            },
            {
              "Sid": "InvokeProjectResourceHandler",
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction"
              ],
              "Resource": [
                {"Fn::Join": ["", ["arn:aws:lambda:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":function:", {"Ref": "ProjectResourceHandler"}]]}
              ]
            },
            {
              "Sid": "FullAccessToProjectConfigurationAndLogs",
              "Effect": "Allow",
              "Action": [
                "s3:*"
              ],
              "Resource": [
                {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "Configuration"}]]},
                {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "Logs"}]]}
              ]
            },
            {
              "Sid": "FullAccessToProjectDeploymentAndResourceGroupLogs",
              "Effect": "Allow",
              "Action": [
                "logs:*"
              ],
              "Resource": [
                {"Fn::Join": ["", ["arn:aws:logs:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":log-group:/aws/lambda/", {"Ref": "AWS::StackName"}, "-*"]]}
              ]
            },
            {
              "Sid": "FullAccessToProjectDeploymentAndResourceGroupResources",
              "Effect": "Allow",
              "Action": [
                "dynamodb:*",
                "s3:*",
                "sqs:*",
                "sns:*",
                "lambda:*",
                "cognito-idp:*"
              ],
              "Resource": [
                {"Fn::Join": ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/", {"Ref": "AWS::StackName"}, "-*"]]},
                {"Fn::Join": ["", ["arn:aws:s3:::", {"Fn::GetAtt": ["Helper", "LowerCaseStackName"]}, "-*"]]},
                {"Fn::Join": ["", ["arn:aws:sqs:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "AWS::StackName"}, "-*"]]},
                {"Fn::Join": ["", ["arn:aws:sns:*:", {"Ref": "AWS::AccountId"}, ":", {"Ref": "AWS::StackName"}, "-*"]]},
                {"Fn::Join": ["", ["arn:aws:lambda:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":function:", {"Ref": "AWS::StackName"}, "-*"]]},
                {"Fn::Sub": "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${AWS::Region}*"}
              ]
            },
            {
              "Sid": "UpdateProjectStack",
              "Effect": "Allow",
              "Action": [
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStacks",
                "cloudformation:GetTemplate",
                "cloudformation:UpdateStack"
              ],
              "Resource": [
                {"Fn::Join": ["", ["arn:aws:cloudformation:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":stack/", {"Ref": "AWS::StackName"}, "/*"]]}
              ]
            },
            {
              "Sid": "DescribeIdentityPools",
              "Effect": "Allow",
              "Action": [
                "cognito-identity:GetIdentityPoolRoles"
              ],
              "Resource": [
                {"Fn::Sub": "arn:aws:cognito-identity:${AWS::Region}:${AWS::AccountId}:identitypool/${AWS::Region}*"}
              ]
            }
          ]
        }
      }
    },

    "ProjectAccess": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Path": {
          "Fn::Join": ["", ["/", {"Ref": "AWS::StackName"}, "/"]]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "ReadProjectDeploymentAndResourceGroupStackState",
              "Effect": "Allow",
              "Action": [
                "cloudformation:DescribeStackResources",
                "cloudformation:DescribeStackResource",
                "cloudformation:ListStackResources"
              ],
              "Resource": [
                {"Fn::Join": ["", ["arn:aws:cloudformation:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":stack/", {"Ref": "AWS::StackName"}, "/*"]]},
                {"Fn::Join": ["", ["arn:aws:cloudformation:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":stack/", {"Ref": "AWS::StackName"}, "-*"]]}
              ]
            },
            {
              "Sid": "ReadProjectSettings",
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [
                {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "Configuration"}, "/project-settings.json"]]},
                {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "Configuration"}, "/project-settings/*"]]},
                {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "Configuration"}, "/resource-settings/*"]]},
                {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "Configuration"}, "/dstack*"]]}
              ]
            },
            {
              "Sid": "ListStacks",
              "Effect": "Allow",
              "Action": "s3:ListBucket",
              "Resource": [
                {"Fn::Join": ["", ["arn:aws:s3:::", {"Ref": "Configuration"}]]}
              ]
            }
          ]
        }
      }
    },

    "ProjectAdmin": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": {
          "Fn::Join": ["", ["/", {"Ref": "AWS::StackName"}, "/"]]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AccountUserAssumeRole",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "AWS": {
                  "Ref": "AWS::AccountId"
                }
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Ref": "ProjectAccess"
          },
          {
            "Ref": "ProjectOwnerAccess"
          }
        ]
      },
      "Metadata": {
        "CloudCanvas": {
          "RoleMappings": [
            {
              "AbstractRole": [
                "*.ProjectAdmin"
              ],
              "Effect": "Allow"
            }
          ]
        }
      }
    }
  },

  "Outputs": {}

}