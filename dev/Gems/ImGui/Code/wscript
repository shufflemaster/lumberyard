########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
########################################################################################


def build(bld):

    config_based_defines = []
    platform_defines=[]
    if bld.env['CONFIGURATION'] == 'profile' or bld.env['CONFIGURATION'] == 'debug':
        config_based_defines=['IMGUI_ENABLED']
    if bld.env['PLATFORM'] != 'win':
        platform_defines=['IMGUI_DISABLE_WIN32_DEFAULT_CLIPBOARD_FUNCTIONS', 'IMGUI_DISABLE_WIN32_DEFAULT_IME_FUNCTIONS']

    kw_shared_lib = dict(
        target='imguilib',
        vs_filter='Gems/ImguiLib',
        platforms=['all'],
        configurations=['all'],
        file_list=['imgui_lib.waf_files'],
        defines=list(config_based_defines) + list(platform_defines) + ['IMGUI_INCLUDE_IMGUI_USER_INL'],
        export_includes=[bld.Path('Gems/ImGui/External/ImGui/v1.53')],
        export_defines=['IMGUI_API_IMPORT', 'IMGUI_INCLUDE_IMGUI_USER_H'],
        platform_roots=[bld.PlatformRoot('Source/Platform', export_includes=False)]
    )

    bld.CryEngineSharedLibrary(**kw_shared_lib)

    kw_gem = dict(
        includes=[bld.Path('Code/CryEngine/CryCommon'),
                  bld.Path('Code/CryEngine/CryAction')
                  ],
        use=['imguilib'],
        file_list=['imgui_common.waf_files', 'imgui_game.waf_files'],
        test_all_file_list=['imgui_test.waf_files'],
        defines=list(config_based_defines),
        linux_rpath = ['$ORIGIN'],
        platform_roots=[bld.PlatformRoot('Source/Platform', export_includes=False)],

        # Editor Gem configuration
        editor=dict(
            includes=[
                bld.Path('Code/CryEngine/CryCommon'),
                bld.Path('Code/CryEngine/CryAction'),
                bld.Path('Code/Sandbox/Plugins/EditorCommon'),
                bld.Path('Code/Sandbox/Editor')
                ],
            use=['imguilib', 'AzToolsFramework', 'AzQtComponents'],
            file_list=['imgui_common.waf_files', 'imgui_editor.waf_files'],
            test_all_file_list=['imgui_test.waf_files'],
            defines=list(config_based_defines),
            platform_roots=[bld.PlatformRoot('Source/Platform', export_includes=False)],

            uselib=['QT5CORE', 'QT5GUI', 'QT5WIDGETS'],

            features=['qt5']
        )
    )

    bld.DefineGem(**kw_gem)
