########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
########################################################################################

def build(bld):

    defines = []

    kw = dict(
        # Settings
        target          = 'AzCore',
        vs_filter       = 'AZ Framework',
        file_list       = ['azcore.waf_files', 'std/azstd.waf_files'],
        platforms       = ['all'],
        configurations  = ['all'],
        disable_pch     = True,
        includes        = ['..'],
        export_includes = ['..'],
        use             = ['RAPIDJSON',
                           'RAPIDXML',
                           'LUA',
                           'ZLIB',
                           'RAD_TELEMETRY',
                           'UNWIND'],
        defines         = list(defines),
        export_defines  = list(defines),
        features        = ['internal_telemetry'],
        test_all_defines = ['AZCORE_ENABLE_MEMORY_TRACKING'],
        test_all_export_defines = ['AZCORE_ENABLE_MEMORY_TRACKING'],

        # Compiler Specific
        msvc_cxxflags       = ['/W4'],

        # Platform Specific
        win_file_list       = ['azcore_win.waf_files', 'std/azstd_win.waf_files'],
        win_x64_vs2013_file_list = ['azcore_natvis_vs2013.waf_files'],
        win_x64_vs2015_file_list = ['azcore_natvis_vs2015.waf_files'],
        win_defines         = [
                              '_HAS_EXCEPTIONS=0',  # prevents warning: "C++ exception handler used, but unwind semantics are not enabled"
                              ],
        win_features        = ['crcfix'],

        restricted_script = 'update_restricted_parameters',

        android_file_list   = ['azcore_android.waf_files', 'std/azstd_android.waf_files'],

        ios_file_list       = ['azcore_ios.waf_files', 'std/azstd_apple.waf_files'],

        appletv_file_list   = ['azcore_appletv.waf_files', 'std/azstd_apple.waf_files'],

        darwin_file_list    = ['azcore_osx.waf_files', 'std/azstd_apple.waf_files'],
        darwin_enable_rtti  = True,

        linux_file_list     = ['azcore_linux.waf_files', 'std/azstd_linux.waf_files'],
        linux_includes      = ['/usr/include/libcxxabi'],
    )
    for p in bld.env['RESTRICTED_PLATFORMS']:
        kw['{}_file_list'.format(p)] = [
            '{0}/azcore_{0}.waf_files'.format(p),
            'std/{0}/azstd_{0}.waf_files'.format(p),
        ]
    bld.CryEngineStaticLibrary(**kw)
