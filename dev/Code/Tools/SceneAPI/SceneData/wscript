########################################################################################
#
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates, or
# a third party where indicated.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
########################################################################################



def build(bld): 

    #Create a file list that is needed for the exported symbols in the dylib in a non-monolithic build
    darwinExportedSymbolFileList=[]
    if not bld.is_monolithic_build():
        darwinExportedSymbolFileList.append('SceneData_darwin.waf_files');

    kw = dict(

        # Settings
        target                      = 'SceneData',
        vs_filter                   = 'Tools/SceneAPI',
        disable_pch                 = True,
        file_list                   = ['SceneData.waf_files'],
        platforms                   = ['win', 'darwin'],
        configurations              = ['debug', 'debug_test', 'profile', 'profile_test'],
        includes                    = [ bld.Path('Code/Tools') ],
        use                         = ['SceneCore',
                                       'AzCore',
                                       'AzFramework',
                                       'AzToolsFramework',
                                       'GFxFramework'],
        uselib                      = ['QT5CORE',
                                       'QT5WIDGETS',
                                       'QT5GUI'],
        defines                     = [ 'SCENE_DATA_EXPORTS' ],
        features                    = ['qt5', 'crcfix', 'link_running_program'],
        output_sub_folder_copy      = 'rc',

        #platform specific
        darwin_file_list            = darwinExportedSymbolFileList,

        # Testing
        test_all_file_list          = 'SceneData_testing.waf_files',
    )

    for p in bld.env['RESTRICTED_PLATFORMS']:
        kw['file_list'].append('Rules/{0}/SceneData_tools_{0}.waf_files'.format(p))

    bld.CryEngineModule(**kw)
