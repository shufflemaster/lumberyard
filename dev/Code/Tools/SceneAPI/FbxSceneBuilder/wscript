########################################################################################
#
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates, or
# a third party where indicated.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
########################################################################################


def build(bld):
    
    from waflib import Utils
    host_platform = Utils.unversioned_sys_platform()
    
    if host_platform == 'linux':
        # For linux platforms, build this module as a static library
        build_func           = 'CryEngineStaticLibrary'
        build_defines        = ['FBX_SCENE_BUILDER_STATIC', '_HAS_EXCEPTIONS=0']
        build_export_defines = ['FBX_SCENE_BUILDER_STATIC']
        build_features       = []
    else:
        # For all other platforms, build this module as a shared library
        build_func           = 'CryEngineModule'
        build_defines        = ['FBX_SCENE_BUILDER_EXPORTS', '_HAS_EXCEPTIONS=0']
        build_export_defines = []
        build_features       = ['link_running_program']

    getattr(bld, build_func)(
        # Settings
        target                  = 'FbxSceneBuilder',
        vs_filter               = 'Tools/SceneAPI',
        file_list               = 'fbxscenebuilder.waf_files',

        platforms               = ['win', 'darwin', 'linux'],
        exclude_monolithic      = True,
        client_only             = True,
        disable_pch             = True,
        includes                = [bld.Path('Code/Tools')],
        export_includes         = [bld.Path('Code/Tools')],
        use                     = ['AzCore',
                                   'AzFramework',
                                   'SceneCore',
                                   'SceneData',
                                   'AzToolsFramework',
                                   'GFxFramework',
                                   'FbxSDKWrapper'],
        defines                 = build_defines,
        build_export_defines    = build_export_defines,
        output_sub_folder_copy  = ['rc'],
        features                = build_features,
        win_x64_clang_cxxflags  = ['-Wno-null-dereference'],
        linux_cxxflags          = ['-Wno-null-dereference'],

        # platform specific
        darwin_file_list        = 'fbxscenebuilder_darwin.waf_files',
        linux_file_list         = 'fbxscenebuilder_linux.waf_files',

        # Testing
        test_all_file_list = 'fbxscenebuilder_testing.waf_files',
    )
